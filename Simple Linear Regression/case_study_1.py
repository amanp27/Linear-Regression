# -*- coding: utf-8 -*-
"""Case Study- I

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17KwIeTB0ru-ukfbyIeu2VFrmWJVn6B4P

# ***Simple Linear Regression Case Study***
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

df = pd.read_csv('/content/cgpa_salary_dataset.csv')

df.head()

df.tail()

df.isnull().sum()

plt.scatter(df['CGPA'], df['Salary_Package'])
plt.title('CGPA vs Salary Package')
plt.xlabel('CGPA')
plt.ylabel('Salary Package')
plt.show()

X = df.iloc[:, :-1]
y = df.iloc[:, -1]

X

y

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 2)

from sklearn.linear_model import LinearRegression

lr = LinearRegression()

lr.fit(X_train, y_train)

X_train

y_train

X_test

y_test

plt.scatter(df['CGPA'], df['Salary_Package'])
plt.plot(X_train, lr.predict(X_train), color = 'red')
plt.xlabel('CGPA')
plt.ylabel('Package(in lpa)')

from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score

y_pred = lr.predict(X_test)

y_test.values

print('MAE', mean_absolute_error(y_test, y_pred))
print('MSE', mean_squared_error(y_test, y_pred))
print('RMSE', np.sqrt(mean_squared_error(y_test, y_pred)))
print('R2', r2_score(y_test, y_pred))

"""### **1. MAE (Mean Absolute Error):** Value: 0.5577 LPA

* The MAE tells you the average absolute error between the predicted salaries and the actual salaries.
* On average, your predictions are off by 0.5577 LPA.
* Since the unit is LPA (Lakhs Per Annum), it’s easier to interpret directly.


### **2. MSE (Mean Squared Error):** Value: 0.3745 (LPA²)
* The MSE is the mean of the squared differences between the predicted and actual salaries.
* It penalizes larger errors more heavily because errors are squared.
* It is not directly interpretable in terms of the original unit (LPA) because it is in squared units (LPA²).

### **3. RMSE (Root Mean Squared Error):** Value: 0.6119 LPA

* The RMSE is the square root of the MSE, which brings it back to the same unit as the target variable (LPA).
* It tells you that the typical prediction error (or standard deviation of the errors) is 0.6119 LPA.
* RMSE is often used when large errors are undesirable because it penalizes larger errors more than MAE.

### **4. R² (R-squared or Coefficient of Determination):** Value: 0.9594

* The R² measures how well your regression model explains the variance in the target variable (salaries).
* An R² of 0.9594 means your model explains 95.94% of the variance in the salaries. This indicates a very good fit.

### **MAE:**

* Use it for a simplistic understanding of how far off, on average, your predictions are from the actual values.
* It's straightforward and interpretable (e.g., "On average, my salary predictions are off by 0.56 LPA").

### **RMSE:**

* Use it when large errors matter more, but you still want the error to be expressed in the same unit as the target variable.
* It emphasizes significant deviations (e.g., "Occasionally, my model's error may spike, and RMSE highlights this better").

**A big RMSE vs. MAE gap could mean the model predicts poorly for extreme CGPA ranges (e.g., very low or very high CGPA).**

**You can handle this by segmenting the data (e.g., separate models for low and high CGPA ranges) or transforming features (e.g., log transformations).**
"""

